#!/usr/bin/python

# includes

import sys # standard
import os # terminal commands



foldername = sys.argv[1] # choose foldername - todo: two sets per folder, idk how I'll change it yet

# Path  definitions
path_in = "/imaging/mc04/MRIcalibration/Data/Dicom/Prisma/"
path_out = "/imaging/mc04/fm03/data/"
path_mrtrix = "/imaging/local/software/mrtrix/v3.0.3_nogui/bin/"
path_fsl = "/imaging/local/software/fsl/v6.0.1/centos7/bin/"

# Define functions
def call(*arg):
	command = ""
	for a in arg:
		command = command + a + " "
	command = command[:-1]
	os.system(command)

def mrpath(s):
	return path_mrtrix + s

def mrcall(*arg):
	lst = list(arg)
	lst[0] = path_mrtrix + lst[0]
	t = tuple(lst)
	call(*t)

def mif(s):
	return path_out + s + "_" + foldername.replace('/','') + ".mif"

def txt(s):
	return path_out + s + "_" + foldername.replace('/','') + ".txt"

def skip(s):
	print("File/Folder <"+s+"> already exists - skip")

# Create folder
path_out = path_out + foldername
if not os.path.exists(path_out):
	print("Creating folder <"+path_out+">")
	call("mkdir", path_out)
else:
	skip(path_out)


# mif conversion for convenience

dwi_raw = mif("dwi_raw")

if os.path.exists(dwi_raw):
	skip(dwi_raw)
else:
	mrcall("mrconvert", path_in + foldername, dwi_raw)

#mrcall("mrinfo", dwi_raw_file)

# denoising data - error, needs 4d data, ask MC about format
dwi_den = dwi_raw
"""
# Denoise data

dwi_den = mif("dwi_den")
dwi_den_noise = mif("noise")
dwi_den_residual = mif("residual")

if os.path.exists(dwi_den):
	skip(dwi_den)
else:
	mrcall("dwidenoise", dwi_raw, dwi_den, "-noise", dwi_den_noise)
	mrcall("mrcalc", dwi_raw, dwi_den, "-subtract", dwi_den_residual)
"""

# Unringing data (Gibbs)

dwi_den_unr = mif("dwi_den_unr")
residualUnringed = mif("residualUnringed")

if os.path.exists(dwi_den_unr):
	skip(dwi_den_unr)
else:
	mrcall("mrdegibbs", dwi_den, dwi_den_unr, "-axes 0,1")
	mrcall("mrcalc", dwi_den, dwi_den_unr, "-subtract", residualUnringed)

# Motion/Distortion Correction - only for b0 images, don't think I have any of those, ask MC

"""

mean_b0_AP = mif("mean_b0_AP")
dwi_den_unr_preproc = mif("dwi_den_unr_preproc")


if os.path.exists(mean_b0_AP):
	skip(mean_b0_AP)
else:
	mrcall("dwiextract", dwi_den_unr, "- -bzero |", mrpath("mrmath"), "- mean", mean_b0_AP, "-axis 3")
	
"""
dwi_den_unr_preproc = dwi_den_unr


# Bias Field Correction - ANTS installation missing - ask IT
"""
dwi_den_unr_preproc_unbiased = mif("dwi_den_unr_preproc_unbiased")
bias = mif("bias")

if os.path.exists(dwi_den_unr_preproc_unbiased):
	skip(dwi_den_unr_preproc_unbiased)
else:
	mrcall("dwibiascorrect", "-ants", dwi_den_unr_preproc, dwi_den_unr_preproc_unbiased, "-bias", bias)

"""

dwi_den_unr_preproc_unbiased = dwi_den_unr_preproc

# Brain Mask Estimation - no diffusion encoding information found in image - idk what that's about, ask MC

"""
mask_den_unr_preproc_unb = mif("mask_den_unr_preproc_unb")

if os.path.exists(mask_den_unr_preproc_unb):
	skip(mask_den_unr_preproc_unb)
else:
	mrcall("dwi2mask", dwi_den_unr_preproc_unbiased, mask_den_unr_preproc_unb)
"""

# Fibre Orientation Distribution

# Response Function Estimation - only one b-value, but might be interesting; "[ERROR] Script requires diffusion gradient table: either in image header, or using -grad / -fslgrad option" idk

voxels = mif("voxels")

"""

if os.path.exists(voxels):
	skip(voxels)
else:
	mrcall("dwi2response", "dhollander", dwi_den_unr_preproc_unbiased, txt("wm"), txt("gm"), txt("gsf"), "-voxels", voxels)

"""

# Whole-brain tractogram - [ERROR] Environment variable FSLDIR is not set; please run appropriate FSL configuration script - do I have permissions to do this? ask MC

# setup fsl
#call("export FSLDIR=/imaging/local/software/fsl/v6.0.1/centos7")

ftt_nocoreg = mif("5tt_nocoreg")
if os.path.exists(ftt_nocoreg):
	skip(ftt_nocoreg)
else:
	mrcall("5ttgen fsl", dwi_raw, ftt_nocoreg)








